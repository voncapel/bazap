
/USERS/TRISTAN/CODE/BAZAP_NEWS/GEMFILE CODE IS BELOW
source "https://rubygems.org"

ruby "3.2.2"

# Bundle edge Rails instead: gem "rails", github: "rails/rails", branch: "main"
gem "rails", "~> 7.1.3", ">= 7.1.3.4"

# The original asset pipeline for Rails [https://github.com/rails/sprockets-rails]
gem "sprockets-rails"

# Use postgresql as the database for Active Record
gem "pg", "~> 1.1"

# Use the Puma web server [https://github.com/puma/puma]
gem "puma", ">= 5.0"

# Use JavaScript with ESM import maps [https://github.com/rails/importmap-rails]
gem "importmap-rails"

# Hotwire's SPA-like page accelerator [https://turbo.hotwired.dev]
gem "turbo-rails"

# Hotwire's modest JavaScript framework [https://stimulus.hotwired.dev]
gem "stimulus-rails"

# Build JSON APIs with ease [https://github.com/rails/jbuilder]
gem "jbuilder"

# Use Redis adapter to run Action Cable in production
gem "redis", ">= 4.0.1"

# Use Kredis to get higher-level data types in Redis [https://github.com/rails/kredis]
# gem "kredis"

# Use Active Model has_secure_password [https://guides.rubyonrails.org/active_model_basics.html#securepassword]
# gem "bcrypt", "~> 3.1.7"

# Windows does not include zoneinfo files, so bundle the tzinfo-data gem
gem "tzinfo-data", platforms: %i[ windows jruby ]

# Reduces boot times through caching; required in config/boot.rb
gem "bootsnap", require: false

# Use Active Storage variants [https://guides.rubyonrails.org/active_storage_overview.html#transforming-images]
# gem "image_processing", "~> 1.2"

group :development, :test do
  # See https://guides.rubyonrails.org/debugging_rails_applications.html#debugging-with-the-debug-gem
  gem "debug", platforms: %i[ mri windows ]
end

group :development do
  # Use console on exceptions pages [https://github.com/rails/web-console]
  gem "web-console"
  gem "rails_live_reload"

  #Add speed badges [https://github.com/MiniProfiler/rack-mini-profiler]
  # gem "rack-mini-profiler"

  # Speed up commands on slow machines / big apps [https://github.com/rails/spring]
  # gem "spring"
end

group :test do
  # Use system testing [https://guides.rubyonrails.org/testing.html#system-testing]
  gem "capybara"
  gem "selenium-webdriver"
end

  gem 'tailwindcss-rails'

gem 'bcrypt', '~> 3.1.7'

/USERS/TRISTAN/CODE/BAZAP_NEWS/PROCFILE.DEV CODE IS BELOW
web: bin/rails server
css: bin/rails tailwindcss:watch


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/CHANNELS/APPLICATION_CABLE/CHANNEL.RB CODE IS BELOW
module ApplicationCable
  class Channel < ActionCable::Channel::Base
  end
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/CHANNELS/APPLICATION_CABLE/CONNECTION.RB CODE IS BELOW
module ApplicationCable
  class Connection < ActionCable::Connection::Base
  end
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/CONTROLLERS/ABOUT_CONTROLLER.RB CODE IS BELOW
class AboutController < ApplicationController
  def index
  end
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/CONTROLLERS/APPLICATION_CONTROLLER.RB CODE IS BELOW
class ApplicationController < ActionController::Base
  helper_method :current_user, :logged_in?

  private

  def current_user
    @current_user ||= User.find_by(id: session[:user_id]) if session[:user_id]
  end

  def logged_in?
    !!current_user
  end

  def require_login
    unless logged_in?
      flash[:alert] = "You must be logged in to access this page"
      redirect_to login_path
    end
  end
end

/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/CONTROLLERS/AUTH_CONTROLLER.RB CODE IS BELOW
class AuthController < ApplicationController
  def login
  end

  def register
  end
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/CONTROLLERS/CONCERNS/.KEEP CODE IS BELOW


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/CONTROLLERS/HOME_CONTROLLER.RB CODE IS BELOW
class HomeController < ApplicationController
  def index
  end
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/CONTROLLERS/INBOX_CONTROLLER.RB CODE IS BELOW
class InboxController < ApplicationController
  before_action :require_login

  def index
    @senders = current_user.incoming_emails.group_by(&:sender).transform_values do |emails|
      {
        name: emails.first.sender_name,
        unread_count: emails.count { |e| !e.read },
        emails: emails.sort_by(&:created_at).reverse.take(5)
      }
    end
    
    @selected_email = params[:email_id] ? current_user.incoming_emails.find(params[:email_id]) : @senders.values.first&.dig(:emails, 0)
  end

  def show
    @email = current_user.incoming_emails.find(params[:id])
    @email.update(read: true)
    
    render json: { body: @email.body, subject: @email.subject }
  end

  def require_login
    unless current_user
      redirect_to login_path, alert: "You must be logged in to access this page"
    end
  end
end

/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/CONTROLLERS/INCOMING_EMAILS_CONTROLLER.RB CODE IS BELOW
class IncomingEmailsController < ApplicationController
  def show
    @email = current_user.incoming_emails.find(params[:id])
  end
end

/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/CONTROLLERS/PRICING_CONTROLLER.RB CODE IS BELOW
class PricingController < ApplicationController
  def index
  end
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/CONTROLLERS/SESSIONS_CONTROLLER.RB CODE IS BELOW
class SessionsController < ApplicationController
  def new
  end

  def create
    user = User.find_by(username: params[:username])
    if user && user.authenticate(params[:password])
      session[:user_id] = user.id
      redirect_to inbox_path, notice: 'Logged in successfully!'
    else
      flash.now[:alert] = 'Invalid username or password'
      render :new
    end
  end

  def destroy
    session[:user_id] = nil
    redirect_to root_path, notice: 'Logged out successfully!'
  end
end

/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/CONTROLLERS/USERS_CONTROLLER.RB CODE IS BELOW
class UsersController < ApplicationController
  def new
    @user = User.new
  end

  def create
    @user = User.new(user_params)
    if @user.save
      session[:user_id] = @user.id
      redirect_to inbox_path, notice: 'Account created successfully! Welcome to your inbox.'
    else
      render :new
    end
  end

  private

  def user_params
    params.require(:user).permit(:username, :password, :password_confirmation)
  end
end

/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/HELPERS/ABOUT_HELPER.RB CODE IS BELOW
module AboutHelper
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/HELPERS/APPLICATION_HELPER.RB CODE IS BELOW
module ApplicationHelper
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/HELPERS/AUTH_HELPER.RB CODE IS BELOW
module AuthHelper
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/HELPERS/HOME_HELPER.RB CODE IS BELOW
module HomeHelper
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/HELPERS/INBOX_HELPER.RB CODE IS BELOW
module InboxHelper
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/HELPERS/INCOMING_EMAILS_HELPER.RB CODE IS BELOW
module IncomingEmailsHelper
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/HELPERS/PRICING_HELPER.RB CODE IS BELOW
module PricingHelper
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/HELPERS/SESSIONS_HELPER.RB CODE IS BELOW
module SessionsHelper
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/HELPERS/USERS_HELPER.RB CODE IS BELOW
module UsersHelper
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/JAVASCRIPT/APPLICATION.JS CODE IS BELOW
// Configure your import map in config/importmap.rb. Read more: https://github.com/rails/importmap-rails
import "@hotwired/turbo-rails"
import "controllers"


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/JAVASCRIPT/CONTROLLERS/APPLICATION.JS CODE IS BELOW
import { Application } from "@hotwired/stimulus"

const application = Application.start()

// Configure Stimulus development experience
application.debug = false
window.Stimulus   = application

export { application }


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/JAVASCRIPT/CONTROLLERS/EMAIL_CONTROLLER.JS CODE IS BELOW
import { Controller } from "@hotwired/stimulus";

export default class extends Controller {
  static targets = ["subject", "body", "list"];

  connect() {
    if (this.hasSubjectTarget && this.hasBodyTarget) {
      this.loadEmail(this.subjectTarget.dataset.emailId);
    }
  }

  select(event) {
    event.preventDefault();
    const emailId = event.currentTarget.dataset.emailId;
    this.loadEmail(emailId);
  }

  loadEmail(emailId) {
    fetch(`/inbox/${emailId}`, {
      headers: {
        Accept: "application/json",
      },
    })
      .then((response) => response.json())
      .then((data) => {
        this.subjectTarget.textContent = data.subject;
        this.bodyTarget.innerHTML = this.simpleFormat(data.body);

        // Update the bold status of the list items
        this.listTargets.forEach((item) => {
          if (item.dataset.emailId === emailId) {
            item.classList.remove("font-bold");
          }
        });
      });
  }

  simpleFormat(text) {
    if (!text) return "";
    let formatted = text.replace(/\n\n/g, "</p><p>").replace(/\n/g, "<br>");
    return `<p>${formatted}</p>`;
  }
}


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/JAVASCRIPT/CONTROLLERS/HELLO_CONTROLLER.JS CODE IS BELOW
import { Controller } from "@hotwired/stimulus"

export default class extends Controller {
  connect() {
    this.element.textContent = "Hello World!"
  }
}


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/JAVASCRIPT/CONTROLLERS/INDEX.JS CODE IS BELOW
// Import and register all your controllers from the importmap under controllers/*

import { application } from "controllers/application"

// Eager load all controllers defined in the import map under controllers/**/*_controller
import { eagerLoadControllersFrom } from "@hotwired/stimulus-loading"
eagerLoadControllersFrom("controllers", application)

// Lazy load controllers as they appear in the DOM (remember not to preload controllers in import map!)
// import { lazyLoadControllersFrom } from "@hotwired/stimulus-loading"
// lazyLoadControllersFrom("controllers", application)


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/MAILBOXES/APPLICATION_MAILBOX.RB CODE IS BELOW
class ApplicationMailbox < ActionMailbox::Base
  # routing /something/i => :somewhere
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/MAILBOXES/INBOX_MAILBOX.RB CODE IS BELOW
class InboxMailbox < ApplicationMailbox
  def process
    user = User.find_by(email: mail.to.first)
    
    if user
      user.incoming_emails.create(
        subject: mail.subject,
        body: mail.body.to_s,
        sender: mail.from.first,
        received_at: Time.now
      )
    else
      Rails.logger.warn "Received email for non-existent user: #{mail.to.first}"
    end
  end
end

/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/MAILERS/APPLICATION_MAILER.RB CODE IS BELOW
class ApplicationMailer < ActionMailer::Base
  default from: "from@example.com"
  layout "mailer"
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/MODELS/APPLICATION_RECORD.RB CODE IS BELOW
class ApplicationRecord < ActiveRecord::Base
  primary_abstract_class
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/MODELS/CONCERNS/.KEEP CODE IS BELOW


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/MODELS/EMAIL.RB CODE IS BELOW
class Email < ApplicationRecord
  belongs_to :user

  def sender_name
    # This is a placeholder. In a real application, you'd implement logic
    # to extract or lookup the sender's name.
    nil
  end
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/MODELS/INCOMING_EMAIL.RB CODE IS BELOW
class IncomingEmail < ApplicationRecord
  belongs_to :user

  attribute :read, :boolean, default: false
  
  def sender_name
    sender.split('@').first.titleize
  end
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/MODELS/USER.RB CODE IS BELOW
class User < ApplicationRecord
    has_secure_password
    validates :username, presence: true, uniqueness: true, format: { with: /\A[a-zA-Z0-9_]+\z/, message: "only allows letters, numbers, and underscores" }
    validates :password, presence: true, length: { minimum: 6 }
    has_many :incoming_emails

    def email
      "#{username}@bazap.news"
    end

    def receive_email(subject, sender, body)
        incoming_emails.create(subject: subject, sender: sender, body: body)
      end
  end

/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/ABOUT/INDEX.HTML.ERB CODE IS BELOW
<div>
  <h1 class="font-bold text-4xl">About#index</h1>
  <p>Find me in app/views/about/index.html.erb</p>
</div>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/AUTH/LOGIN.HTML.ERB CODE IS BELOW
<div>
  <h1 class="font-bold text-4xl">Auth#login</h1>
  <p>Find me in app/views/auth/login.html.erb</p>
</div>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/AUTH/REGISTER.HTML.ERB CODE IS BELOW
<div>
  <h1 class="font-bold text-4xl">Auth#register</h1>
  <p>Find me in app/views/auth/register.html.erb</p>
</div>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/HOME/INDEX.HTML.ERB CODE IS BELOW
<%= render partial: "shared/nav_front" %>
<div class="container mx-auto ">
  <h1 class="">
    <%= render partial: "shared/graphics/logo",  locals: {classes: "fill-darkBlue-500"} %>
  </h1>
  <h2 class="text-2xl md:text-4xl text-center bg-darkBlue-600 font-light italic p-4 border-b border-darkBlue-500 mb-16">"The newsletter experience for the modern times"</h2>
  
  <div class="grid grid-cols-1 md:grid-cols-2 mb-16 items-center">
    <div>
      <h3 class="text-3xl font-header-font mb-4 text-darkBlue-500">One email to manage all your subscriptions, beautifully rendered and easily readable.</h3>
      <p class="mb-4 text-darkBlue-500 leading-relaxed">Imagine a world where your inbox is no longer cluttered with unreadable newsletters. With Bazap, that world is a reality. We take your subscribed newsletters and transform them into beautifully formatted articles, all accessible from a single, easy-to-manage email address. No more juggling multiple inboxes or complex forwarding rules—just a seamless reading experience designed for your comfort and convenience.</p>
    </div>
    
    <div class="bg-darkBlue-500 text-white-500 p-6 rounded-xl">
      <h3 class="mb-4 text-center text-3xl italic p-4 text-blue-500">Get your free bazap.news email</h3>
      <%= form_with(model: User.new, url: users_path, local: true) do |f| %>
        <div class="flex mb-4 rounded ">
          <%= f.text_field :username, placeholder: "Your username", class: "flex-1 p-2 text-darkBlue-500 rounded-l bg-cream-500 p-4" %>
          <span class="inline-flex items-center px-8 bg-cream-500/20 text-cream-500 text-md rounded-r">
            @bazap.news
          </span>
        </div>
        <%= f.password_field :password, placeholder: "Password", class: "w-full p-2 mb-4 text-darkBlue-500 rounded bg-cream-500 p-4" %>
        <%= f.password_field :password_confirmation, placeholder: "Confirm password", class: "w-full p-2 mb-4 text-darkBlue-500 rounded bg-cream-500 p-4" %>
        <%= f.submit "Sign up", class: "w-full bg-blue-500 text-white-500 px-4 py-4 rounded hover:bg-blue-400 transition duration-300 hover:cursor-pointer" %>
      <% end %>
    </div>
  </div>

  <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
    <div class="bg-red-500 rounded-lg text-white-500 overflow-hidden flex flex-col items-stretch">
      <div class="p-8 relative grow">
        <div class="bg-cream-500 rounded-full text-darkBlue-500 inline-block px-3 py-1 w-8 h-8 text-center mb-2">
          <p class="text-md font-medium">1</p>
        </div>
        <h3 class="text-5xl font-header-font mt-4 mb-4 italic text-darkBlue-500">Secure your free bazap.news email</h3>
      </div>
      <%= image_tag "landing_illu 1.webp", class: "object-fit mix-blend-darken opacity-70" %>
    </div>
    <div class="bg-green-500 rounded-lg text-white-500 overflow-hidden flex flex-col items-stretch">
      <div class="p-8 relative grow">
        <div class="bg-cream-500 rounded-full text-darkBlue-500 inline-block px-3 py-1 w-8 h-8 text-center mb-2">
          <p class="text-md font-medium">2</p>
        </div>
        <h3 class="text-5xl font-header-font mt-4 mb-4 italic text-darkBlue-500">Use it to subscribe to any newsletter</h3>
      </div>
      <%= image_tag "landing_illu 2.webp", class: "object-fit mix-blend-darken opacity-70" %>
    </div>
    <div class="bg-blue-500 rounded-lg text-white-500 overflow-hidden flex flex-col items-stretch">
      <div class="p-8 relative grow">
        <div class="bg-cream-500 rounded-full text-darkBlue-500 inline-block px-3 py-1 w-8 h-8 text-center mb-2">
          <p class="text-md font-medium">3</p>
        </div>
        <h3 class="text-5xl font-header-font mt-4 mb-4 italic text-darkBlue-500">Enjoy the best reading experience</h3>
      </div>
      <%= image_tag "landing_illu 3.webp", class: "object-fit mix-blend-darken opacity-70" %>
    </div>
  </div>
</div>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/INBOX/_EMAIL_CONTENT.HTML.ERB CODE IS BELOW
<h2 id="email-subject" class="text-2xl font-semibold mb-4"><%= email.subject %></h2>
<div id="email-body" class="prose max-w-none">
  <%= simple_format(email.body) %>
</div>

/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/INBOX/INDEX.HTML.ERB CODE IS BELOW
<div class="flex h-screen overflow-hidden relative" data-controller="email">
  <!-- Sidebar -->
  <div class="flex-grow-0">
    <div class="p-4">
      <h2 class="text-2xl font-semibold mb-4">Inbox</h2>
      <% if @senders.present? %>
        <ul>
          <% @senders.each do |sender, data| %>
            <li class="mb-4">
              <h3 class="font-medium">
                <%= data[:name] %> 
                <% if data[:unread_count] > 0 %>
                  <span class="text-sm text-gray-500">(<%= data[:unread_count] %> unread)</span>
                <% end %>
              </h3>
              <ul class="ml-4 mt-2">
                <% data[:emails].each do |email| %>
                  <li class="text-sm py-1">
                    <%= link_to email.subject, incoming_email_path(email), class: "hover:underline #{'font-bold' unless email.read}", data: { action: "click->email#select", email_id: email.id } %>
                  </li>
                <% end %>
              </ul>
            </li>
          <% end %>
        </ul>
      <% else %>
        <p>Your inbox is empty.</p>
      <% end %>
    </div>
  </div>

  <!-- Main content -->
  <div class="ml-64 flex-1 overflow-y-auto">
    <div class="bg-white p-8 min-h-screen max-w-4xl mx-auto">
      <h2 data-email-target="subject" class="text-2xl font-semibold mb-4" data-email-id="<%= @selected_email&.id %>">
        <%= @selected_email&.subject || "No email selected" %>
      </h2>
      <div data-email-target="body" class="prose max-w-none">
        <%= simple_format(@selected_email&.body) %>
      </div>
    </div>
  </div>
</div>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/INCOMING_EMAILS/SHOW.HTML.ERB CODE IS BELOW
<div>
  <h1 class="font-bold text-4xl">IncomingEmails#show</h1>
  <p>Find me in app/views/incoming_emails/show.html.erb</p>
</div>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/LAYOUTS/APPLICATION.HTML.ERB CODE IS BELOW
<!DOCTYPE html>
<html>
  <head>
    <title>Bazap.news</title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= stylesheet_link_tag "tailwind", "inter-font", "data-turbo-track": "reload" %>
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Newsreader:ital,opsz,wght@0,6..72,200..800;1,6..72,200..800&display=swap" rel="stylesheet">
  </head>
  <body class="bg-cream-500 p-4">
    <main class="container mx-auto">
      <%= yield %>
    </main>
  </body>
</html>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/LAYOUTS/MAILER.HTML.ERB CODE IS BELOW
<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <style>
      /* Email styles need to be inline */
    </style>
  </head>

  <body>
    <%= yield %>
  </body>
</html>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/LAYOUTS/MAILER.TEXT.ERB CODE IS BELOW
<%= yield %>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/PRICING/INDEX.HTML.ERB CODE IS BELOW
<div>
  <h1 class="font-bold text-4xl">Pricing#index</h1>
  <p>Find me in app/views/pricing/index.html.erb</p>
</div>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/SESSIONS/CREATE.HTML.ERB CODE IS BELOW
<div>
  <h1 class="font-bold text-4xl">Sessions#create</h1>
  <p>Find me in app/views/sessions/create.html.erb</p>
</div>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/SESSIONS/DESTROY.HTML.ERB CODE IS BELOW
<div>
  <h1 class="font-bold text-4xl">Sessions#destroy</h1>
  <p>Find me in app/views/sessions/destroy.html.erb</p>
</div>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/SESSIONS/NEW.HTML.ERB CODE IS BELOW
<div class="p-4 md:w-8/12 lg:w-6/12 mx-auto">
  <%= link_to '< Back to homepage', root_path, class: 'hover:text-darkBlue-200' %>
</div>

<div class="bg-darkBlue-500 text-white-500 p-6 rounded-xl md:w-8/12 lg:w-6/12 mx-auto">
  <div class="pb-8 mb-8 border-b border-cream-500/20">
    <%= render partial: "shared/graphics/logo",  locals: {classes: "fill-cream-500"} %>
  </div>
  <h1 class="mb-4 text-center text-3xl italic p-4 text-blue-500">Login to your bazap account</h1>
  <%= form_with(url: login_path, local: true, class: "space-y-4") do |f| %>
    <div class="flex mb-4 rounded ">
      <%= f.text_field :username, placeholder: "Your username", class: "flex-1 p-2 text-darkBlue-500 rounded-l bg-cream-500 p-4" %>
      <span class="inline-flex items-center px-8 bg-cream-500/20 text-cream-500 text-md rounded-r">
        @bazap.news
      </span>
    </div>
    <%= f.password_field :password, placeholder: "Password", class: "w-full p-2 mb-4 text-darkBlue-500 rounded bg-cream-500 p-4" %>
    <%= f.submit "Login", class: "w-full bg-blue-500 text-white-500 px-4 py-4 rounded hover:bg-blue-400 transition duration-300 hover:cursor-pointer" %>
  <% end %>
  
</div>

<div class="p-4 md:w-8/12 lg:w-6/12 mx-auto">
  <div class="flex items-center gap-2"> 
    <p class="font-header-font text-2xl font-light italic">Allready have an account ?</p>
    <%= link_to 'REGISTER', signup_path, class: 'hover:text-darkBlue-500/80 py-2 px-4 border border-darkBlue-500 rounded-lg' %>
  </div>
</div>

/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/SHARED/_NAV_FRONT.HTML.ERB CODE IS BELOW
<nav class="text-darkBlue-500 py-4">
    <div class="container mx-auto flex justify-start items-center space-x-6 font-semibold gap-8">
      <%= link_to 'HOME', root_path, class: 'hover:text-darkBlue-200' %>
      <%= link_to 'ABOUT', '#', class: 'hover:text-darkBlue-200' %>
      <%= link_to 'PRICING', '#', class: 'hover:text-darkBlue-200' %>
      <% if logged_in? %>
        <%= link_to 'INBOX', inbox_path, class: 'hover:text-darkBlue-200' %>
        <%= button_to 'LOGOUT', logout_path, method: :delete, class: 'hover:text-darkBlue-200' %>
      <% else %>
        <%= link_to 'LOGIN', login_path, class: 'hover:text-darkBlue-200' %>
        <%= link_to 'REGISTER', signup_path, class: 'hover:text-darkBlue-200' %>
      <% end %>
    </div>
  </nav>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/SHARED/GRAPHICS/_LOGO.HTML.ERB CODE IS BELOW
<svg viewBox="0 0 1384 249" xmlns="http://www.w3.org/2000/svg" class="<%= classes %>">
    <g>
        <path d="M176.515 249H0V190.75H27.9673V58.2502H0V0H169.791C221.14 0 246.051 12.2714 256.902 31.8434C261.64 41.1634 263.626 52.0368 263.626 64.1528C263.626 74.4049 261.334 84.0356 256.902 91.9576C249.872 104.695 236.576 114.326 217.014 119.452V120.85C240.702 125.665 257.208 135.296 265.613 150.363C270.351 158.596 272.643 168.537 272.643 180.187C272.643 193.546 270.198 206.594 262.862 217.623C250.789 236.107 225.42 249.155 176.515 249.155V249ZM168.415 81.5502C168.415 65.0848 160.927 58.2502 141.365 58.2502H122.414V105.161H141.365C160.927 105.161 168.415 98.0156 168.415 81.5502ZM171.777 164.964C171.777 147.101 165.664 138.868 143.046 138.868H122.414V190.595H143.046C165.664 190.595 171.777 182.672 171.777 164.809V164.964Z"/>
        <path d="M433.264 163.256H377.635L368.466 190.75H401.476V249H279.368V190.75H302.292L374.273 0H471.777L542.994 190.75H570.961V249H410.34V190.75H441.67L433.264 163.256ZM421.191 124.578L406.978 78.9095H405.603L390.473 124.578H421.191Z"/>
        <path d="M692.153 58.2502H652.418V95.2196H584.257V0H808.301V46.6001L695.974 190.594H746.865V140.111H815.026V248.845H578.755V205.662L692.153 58.2502Z"/>
        <path d="M976.716 163.256H921.087L911.918 190.75H944.928V249H822.82V190.75H845.744L917.572 0H1015.08L1086.29 190.75H1114.26V249H953.64V190.75H984.969L976.564 163.256H976.716ZM964.49 124.578L950.277 78.9095H948.902L933.772 124.578H964.49Z"/>
        <path d="M1384 76.1135C1384 89.4722 1382.32 101.433 1377.89 112.151C1367.49 137.936 1341.82 153.936 1290.16 153.936H1244.62V190.594H1274.27V248.845H1122.05V190.594H1150.02V58.2502H1122.05V0H1290.16C1339.37 0 1365.05 15.0674 1376.51 38.8334C1381.86 49.8621 1384 62.4442 1384 76.2689V76.1135ZM1288.79 81.2395C1288.79 65.3955 1282.68 58.2502 1263.11 58.2502H1244.62V105.161H1263.11C1282.68 105.161 1288.79 96.6176 1288.79 81.0842V81.2395Z"/>
    </g>
</svg>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/USERS/CREATE.HTML.ERB CODE IS BELOW
<div>
  <h1 class="font-bold text-4xl">Users#create</h1>
  <p>Find me in app/views/users/create.html.erb</p>
</div>


/USERS/TRISTAN/CODE/BAZAP_NEWS/APP/VIEWS/USERS/NEW.HTML.ERB CODE IS BELOW
<% if @user.errors.any? %>
  <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
    <strong class="font-bold">Error:</strong>
    <ul>
    <% @user.errors.full_messages.each do |message| %>
      <li><%= message %></li>
    <% end %>
    </ul>
  </div>
<% end %>

<div class="p-4 md:w-8/12 lg:w-6/12 mx-auto">
  <%= link_to '< Back to homepage', root_path, class: 'hover:text-darkBlue-200' %>
</div>
<div class="bg-darkBlue-500 text-white-500 p-6 rounded-xl md:w-8/12 lg:w-6/12 mx-auto">
  <div class="pb-8 mb-8 border-b border-cream-500/20">
    <%= render partial: "shared/graphics/logo",  locals: {classes: "fill-cream-500"} %>
  </div>
  <h1 class="mb-4 text-center text-3xl italic p-4 text-blue-500">Get your free bazap.news email today !</h1>
  <%= form_with(model: User.new, url: users_path, local: true) do |f| %>
    <div class="flex mb-4 rounded ">
      <%= f.text_field :username, placeholder: "Your username", class: "flex-1 p-2 text-darkBlue-500 rounded-l bg-cream-500 p-4" %>
      <span class="inline-flex items-center px-8 bg-cream-500/20 text-cream-500 text-md rounded-r">
        @bazap.news
      </span>
    </div>
    <%= f.password_field :password, placeholder: "Password", class: "w-full p-2 mb-4 text-darkBlue-500 rounded bg-cream-500 p-4" %>
    <%= f.password_field :password_confirmation, placeholder: "Confirm password", class: "w-full p-2 mb-4 text-darkBlue-500 rounded bg-cream-500 p-4" %>
    <%= f.submit "Sign up", class: "w-full bg-blue-500 text-white-500 px-4 py-4 rounded hover:bg-blue-400 transition duration-300 hover:cursor-pointer" %>
  <% end %>
  
</div>

<div class="p-4 md:w-8/12 lg:w-6/12 mx-auto">
  <div class="flex items-center gap-2"> 
    <p class="font-header-font text-2xl font-light italic">Allready have an account ?</p>
    <%= link_to 'LOGIN', login_path, class: 'hover:text-darkBlue-500/80 py-2 px-4 border border-darkBlue-500 rounded-lg' %>
  </div>
</div>


/USERS/TRISTAN/CODE/BAZAP_NEWS/BIN/BUNDLE CODE IS BELOW
#!/usr/bin/env ruby
# frozen_string_literal: true

#
# This file was generated by Bundler.
#
# The application 'bundle' is installed as part of a gem, and
# this file is here to facilitate running it.
#

require "rubygems"

m = Module.new do
  module_function

  def invoked_as_script?
    File.expand_path($0) == File.expand_path(__FILE__)
  end

  def env_var_version
    ENV["BUNDLER_VERSION"]
  end

  def cli_arg_version
    return unless invoked_as_script? # don't want to hijack other binstubs
    return unless "update".start_with?(ARGV.first || " ") # must be running `bundle update`
    bundler_version = nil
    update_index = nil
    ARGV.each_with_index do |a, i|
      if update_index && update_index.succ == i && a.match?(Gem::Version::ANCHORED_VERSION_PATTERN)
        bundler_version = a
      end
      next unless a =~ /\A--bundler(?:[= ](#{Gem::Version::VERSION_PATTERN}))?\z/
      bundler_version = $1
      update_index = i
    end
    bundler_version
  end

  def gemfile
    gemfile = ENV["BUNDLE_GEMFILE"]
    return gemfile if gemfile && !gemfile.empty?

    File.expand_path("../Gemfile", __dir__)
  end

  def lockfile
    lockfile =
      case File.basename(gemfile)
      when "gems.rb" then gemfile.sub(/\.rb$/, ".locked")
      else "#{gemfile}.lock"
      end
    File.expand_path(lockfile)
  end

  def lockfile_version
    return unless File.file?(lockfile)
    lockfile_contents = File.read(lockfile)
    return unless lockfile_contents =~ /\n\nBUNDLED WITH\n\s{2,}(#{Gem::Version::VERSION_PATTERN})\n/
    Regexp.last_match(1)
  end

  def bundler_requirement
    @bundler_requirement ||=
      env_var_version ||
      cli_arg_version ||
      bundler_requirement_for(lockfile_version)
  end

  def bundler_requirement_for(version)
    return "#{Gem::Requirement.default}.a" unless version

    bundler_gem_version = Gem::Version.new(version)

    bundler_gem_version.approximate_recommendation
  end

  def load_bundler!
    ENV["BUNDLE_GEMFILE"] ||= gemfile

    activate_bundler
  end

  def activate_bundler
    gem_error = activation_error_handling do
      gem "bundler", bundler_requirement
    end
    return if gem_error.nil?
    require_error = activation_error_handling do
      require "bundler/version"
    end
    return if require_error.nil? && Gem::Requirement.new(bundler_requirement).satisfied_by?(Gem::Version.new(Bundler::VERSION))
    warn "Activating bundler (#{bundler_requirement}) failed:\n#{gem_error.message}\n\nTo install the version of bundler this project requires, run `gem install bundler -v '#{bundler_requirement}'`"
    exit 42
  end

  def activation_error_handling
    yield
    nil
  rescue StandardError, LoadError => e
    e
  end
end

m.load_bundler!

if m.invoked_as_script?
  load Gem.bin_path("bundler", "bundle")
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/BIN/DEV CODE IS BELOW
#!/usr/bin/env sh

if ! gem list foreman -i --silent; then
  echo "Installing foreman..."
  gem install foreman
fi

# Default to port 3000 if not specified
export PORT="${PORT:-3000}"

# Let the debug gem allow remote connections,
# but avoid loading until `debugger` is called
export RUBY_DEBUG_OPEN="true"
export RUBY_DEBUG_LAZY="true"

exec foreman start -f Procfile.dev "$@"


/USERS/TRISTAN/CODE/BAZAP_NEWS/BIN/DOCKER-ENTRYPOINT CODE IS BELOW
#!/bin/bash -e

# If running the rails server then create or migrate existing database
if [ "${1}" == "./bin/rails" ] && [ "${2}" == "server" ]; then
  ./bin/rails db:prepare
fi

exec "${@}"


/USERS/TRISTAN/CODE/BAZAP_NEWS/BIN/IMPORTMAP CODE IS BELOW
#!/usr/bin/env ruby

require_relative "../config/application"
require "importmap/commands"


/USERS/TRISTAN/CODE/BAZAP_NEWS/BIN/RAILS CODE IS BELOW
#!/usr/bin/env ruby
APP_PATH = File.expand_path("../config/application", __dir__)
require_relative "../config/boot"
require "rails/commands"


/USERS/TRISTAN/CODE/BAZAP_NEWS/BIN/RAKE CODE IS BELOW
#!/usr/bin/env ruby
require_relative "../config/boot"
require "rake"
Rake.application.run


/USERS/TRISTAN/CODE/BAZAP_NEWS/BIN/SETUP CODE IS BELOW
#!/usr/bin/env ruby
require "fileutils"

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args, exception: true)
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts "== Installing dependencies =="
  system! "gem install bundler --conservative"
  system("bundle check") || system!("bundle install")

  # puts "\n== Copying sample files =="
  # unless File.exist?("config/database.yml")
  #   FileUtils.cp "config/database.yml.sample", "config/database.yml"
  # end

  puts "\n== Preparing database =="
  system! "bin/rails db:prepare"

  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"

  puts "\n== Restarting application server =="
  system! "bin/rails restart"
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/CABLE.YML CODE IS BELOW
development:
  adapter: redis
  url: redis://localhost:6379/1

test:
  adapter: test

production:
  adapter: redis
  url: <%= ENV.fetch("REDIS_URL") { "redis://localhost:6379/1" } %>
  channel_prefix: bazap_news_production


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/CREDENTIALS.YML.ENC CODE IS BELOW
X8mfn99wYFpUlh4T7rp90QMkmDrQyezOnOmzRhmxkLHSFP6zo2Rs0Rgyv6McPXkpjSHuE3ajsVU3EUXNXwOC4CCrKcnaKoa5a38mkWafGb/YQHfBD960Kd7Z3QlCBVXioHOdMIDnlcZ1J5cLteY8oAF+Ib1Y8bCeOe5xRsTZ62PtbDx6oO5dkd29SdHH0gj4HsTCthlSye0HRc+hJulSgEmxaLfqdDHkh9aOT/juKJMvz1rOSFpynMkOqw/1nsMhbME/3Q2V+cXmvzPP8WmG6DMQ+IUp0o8k8kAyoLP6uE2YtdLZdCGb8e0Sz++HhqFwbyD/l5NfId8idBF1rLMz823zC2kPIH4vcuXCfdl5CK91uv92ir1TvNOoMRPhm/4VejkqDxSiJLEwOgPLuKhDqnDdySM3--DVhHUW02AXeKatfx--CgPhIecujrBU+uRX60gjDQ==

/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/DATABASE.YML CODE IS BELOW
# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  <<: *default
  database: bazap_news_development

  # The specified database role being used to connect to PostgreSQL.
  # To create additional roles in PostgreSQL see `$ createuser --help`.
  # When left blank, PostgreSQL will use the default role. This is
  # the same name as the operating system user running Rails.
  #username: bazap_news

  # The password associated with the PostgreSQL role (username).
  #password:

  # Connect on a TCP socket. Omitted by default since the client uses a
  # domain socket that doesn't need configuration. Windows does not have
  # domain sockets, so uncomment these lines.
  #host: localhost

  # The TCP port the server listens on. Defaults to 5432.
  # If your server runs on a different port number, change accordingly.
  #port: 5432

  # Schema search path. The server defaults to $user,public
  #schema_search_path: myapp,sharedapp,public

  # Minimum log levels, in increasing order:
  #   debug5, debug4, debug3, debug2, debug1,
  #   log, notice, warning, error, fatal, and panic
  # Defaults to warning.
  #min_messages: notice

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: bazap_news_test

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
#
production:
  <<: *default
  database: bazap_news_production
  username: bazap_news
  password: <%= ENV["BAZAP_NEWS_DATABASE_PASSWORD"] %>


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/ENVIRONMENT.RB CODE IS BELOW
# Load the Rails application.
require_relative "application"

# Initialize the Rails application.
Rails.application.initialize!


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/ENVIRONMENTS/DEVELOPMENT.RB CODE IS BELOW
require "active_support/core_ext/integer/time"

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # In the development environment your application's code is reloaded any time
  # it changes. This slows down response time but is perfect for development
  # since you don't have to restart the web server when you make code changes.
  config.enable_reloading = true

  # Do not eager load code on boot.
  config.eager_load = false

  # Show full error reports.
  config.consider_all_requests_local = true

  # Enable server timing
  config.server_timing = true

  # Enable/disable caching. By default caching is disabled.
  # Run rails dev:cache to toggle caching.
  if Rails.root.join("tmp/caching-dev.txt").exist?
    config.action_controller.perform_caching = true
    config.action_controller.enable_fragment_cache_logging = true

    config.cache_store = :memory_store
    config.public_file_server.headers = {
      "Cache-Control" => "public, max-age=#{2.days.to_i}"
    }
  else
    config.action_controller.perform_caching = false

    config.cache_store = :null_store
  end

  # Store uploaded files on the local file system (see config/storage.yml for options).
  config.active_storage.service = :local

  # Don't care if the mailer can't send.
  config.action_mailer.raise_delivery_errors = false

  config.action_mailer.perform_caching = false

  # Print deprecation notices to the Rails logger.
  config.active_support.deprecation = :log

  # Raise exceptions for disallowed deprecations.
  config.active_support.disallowed_deprecation = :raise

  # Tell Active Support which deprecation messages to disallow.
  config.active_support.disallowed_deprecation_warnings = []

  # Raise an error on page load if there are pending migrations.
  config.active_record.migration_error = :page_load

  # Highlight code that triggered database queries in logs.
  config.active_record.verbose_query_logs = true

  # Highlight code that enqueued background job in logs.
  config.active_job.verbose_enqueue_logs = true

  # Suppress logger output for asset requests.
  config.assets.quiet = true

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  # config.action_view.annotate_rendered_view_with_filenames = true

  # Uncomment if you wish to allow Action Cable access from any origin.
  # config.action_cable.disable_request_forgery_protection = true

  # Raise error when a before_action's only/except options reference missing actions
  config.action_controller.raise_on_missing_callback_actions = true

  config.assets.debug = true

  config.assets.compile = true

  config.action_mailbox.ingress = :smtp

  config.action_mailer.delivery_method = :smtp
  config.action_mailer.smtp_settings = {
    address: '127.0.0.1',
    port: 1025
  }
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/ENVIRONMENTS/PRODUCTION.RB CODE IS BELOW
require "active_support/core_ext/integer/time"

Rails.application.configure do
  # Prepare the ingress controller used to receive mail
  # config.action_mailbox.ingress = :relay

  # Settings specified here will take precedence over those in config/application.rb.

  # Code is not reloaded between requests.
  config.enable_reloading = false

  # Eager load code on boot. This eager loads most of Rails and
  # your application in memory, allowing both threaded web servers
  # and those relying on copy on write to perform better.
  # Rake tasks automatically ignore this option for performance.
  config.eager_load = true

  # Full error reports are disabled and caching is turned on.
  config.consider_all_requests_local = false
  config.action_controller.perform_caching = true

  # Ensures that a master key has been made available in ENV["RAILS_MASTER_KEY"], config/master.key, or an environment
  # key such as config/credentials/production.key. This key is used to decrypt credentials (and other encrypted files).
  # config.require_master_key = true

  # Disable serving static files from `public/`, relying on NGINX/Apache to do so instead.
  # config.public_file_server.enabled = false

  # Compress CSS using a preprocessor.
  # config.assets.css_compressor = :sass

  # Do not fall back to assets pipeline if a precompiled asset is missed.
  config.assets.compile = false

  # Enable serving of images, stylesheets, and JavaScripts from an asset server.
  # config.asset_host = "http://assets.example.com"

  # Specifies the header that your server uses for sending files.
  # config.action_dispatch.x_sendfile_header = "X-Sendfile" # for Apache
  # config.action_dispatch.x_sendfile_header = "X-Accel-Redirect" # for NGINX

  # Store uploaded files on the local file system (see config/storage.yml for options).
  config.active_storage.service = :local

  # Mount Action Cable outside main process or domain.
  # config.action_cable.mount_path = nil
  # config.action_cable.url = "wss://example.com/cable"
  # config.action_cable.allowed_request_origins = [ "http://example.com", /http:\/\/example.*/ ]

  # Assume all access to the app is happening through a SSL-terminating reverse proxy.
  # Can be used together with config.force_ssl for Strict-Transport-Security and secure cookies.
  # config.assume_ssl = true

  # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
  config.force_ssl = true

  # Log to STDOUT by default
  config.logger = ActiveSupport::Logger.new(STDOUT)
    .tap  { |logger| logger.formatter = ::Logger::Formatter.new }
    .then { |logger| ActiveSupport::TaggedLogging.new(logger) }

  # Prepend all log lines with the following tags.
  config.log_tags = [ :request_id ]

  # "info" includes generic and useful information about system operation, but avoids logging too much
  # information to avoid inadvertent exposure of personally identifiable information (PII). If you
  # want to log everything, set the level to "debug".
  config.log_level = ENV.fetch("RAILS_LOG_LEVEL", "info")

  # Use a different cache store in production.
  # config.cache_store = :mem_cache_store

  # Use a real queuing backend for Active Job (and separate queues per environment).
  # config.active_job.queue_adapter = :resque
  # config.active_job.queue_name_prefix = "bazap_news_production"

  config.action_mailer.perform_caching = false

  # Ignore bad email addresses and do not raise email delivery errors.
  # Set this to true and configure the email server for immediate delivery to raise delivery errors.
  # config.action_mailer.raise_delivery_errors = false

  # Enable locale fallbacks for I18n (makes lookups for any locale fall back to
  # the I18n.default_locale when a translation cannot be found).
  config.i18n.fallbacks = true

  # Don't log any deprecations.
  config.active_support.report_deprecations = false

  # Do not dump schema after migrations.
  config.active_record.dump_schema_after_migration = false

  # Enable DNS rebinding protection and other `Host` header attacks.
  # config.hosts = [
  #   "example.com",     # Allow requests from example.com
  #   /.*\.example\.com/ # Allow requests from subdomains like `www.example.com`
  # ]
  # Skip DNS rebinding protection for the default health check endpoint.
  # config.host_authorization = { exclude: ->(request) { request.path == "/up" } }
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/ENVIRONMENTS/TEST.RB CODE IS BELOW
require "active_support/core_ext/integer/time"

# The test environment is used exclusively to run your application's
# test suite. You never need to work with it otherwise. Remember that
# your test database is "scratch space" for the test suite and is wiped
# and recreated between test runs. Don't rely on the data there!

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # While tests run files are not watched, reloading is not necessary.
  config.enable_reloading = false

  # Eager loading loads your entire application. When running a single test locally,
  # this is usually not necessary, and can slow down your test suite. However, it's
  # recommended that you enable it in continuous integration systems to ensure eager
  # loading is working properly before deploying your code.
  config.eager_load = ENV["CI"].present?

  # Configure public file server for tests with Cache-Control for performance.
  config.public_file_server.enabled = true
  config.public_file_server.headers = {
    "Cache-Control" => "public, max-age=#{1.hour.to_i}"
  }

  # Show full error reports and disable caching.
  config.consider_all_requests_local = true
  config.action_controller.perform_caching = false
  config.cache_store = :null_store

  # Render exception templates for rescuable exceptions and raise for other exceptions.
  config.action_dispatch.show_exceptions = :rescuable

  # Disable request forgery protection in test environment.
  config.action_controller.allow_forgery_protection = false

  # Store uploaded files on the local file system in a temporary directory.
  config.active_storage.service = :test

  config.action_mailer.perform_caching = false

  # Tell Action Mailer not to deliver emails to the real world.
  # The :test delivery method accumulates sent emails in the
  # ActionMailer::Base.deliveries array.
  config.action_mailer.delivery_method = :test

  # Print deprecation notices to the stderr.
  config.active_support.deprecation = :stderr

  # Raise exceptions for disallowed deprecations.
  config.active_support.disallowed_deprecation = :raise

  # Tell Active Support which deprecation messages to disallow.
  config.active_support.disallowed_deprecation_warnings = []

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  # config.action_view.annotate_rendered_view_with_filenames = true

  # Raise error when a before_action's only/except options reference missing actions
  config.action_controller.raise_on_missing_callback_actions = true
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/IMPORTMAP.RB CODE IS BELOW
# Pin npm packages by running ./bin/importmap

pin "application"
pin "@hotwired/turbo-rails", to: "turbo.min.js"
pin "@hotwired/stimulus", to: "stimulus.min.js"
pin "@hotwired/stimulus-loading", to: "stimulus-loading.js"
pin_all_from "app/javascript/controllers", under: "controllers"


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/INITIALIZERS/ASSETS.RB CODE IS BELOW
# Be sure to restart your server when you modify this file.

# Version of your assets, change this if you want to expire all your assets.
Rails.application.config.assets.version = "1.0"

# Add additional assets to the asset load path.
# Rails.application.config.assets.paths << Emoji.images_path

# Precompile additional assets.
# application.js, application.css, and all non-JS/CSS in the app/assets
# folder are already added.
# Rails.application.config.assets.precompile += %w( admin.js admin.css )


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/INITIALIZERS/CONTENT_SECURITY_POLICY.RB CODE IS BELOW
# Be sure to restart your server when you modify this file.

# Define an application-wide content security policy.
# See the Securing Rails Applications Guide for more information:
# https://guides.rubyonrails.org/security.html#content-security-policy-header

# Rails.application.configure do
#   config.content_security_policy do |policy|
#     policy.default_src :self, :https
#     policy.font_src    :self, :https, :data
#     policy.img_src     :self, :https, :data
#     policy.object_src  :none
#     policy.script_src  :self, :https
#     policy.style_src   :self, :https
#     # Specify URI for violation reports
#     # policy.report_uri "/csp-violation-report-endpoint"
#   end
#
#   # Generate session nonces for permitted importmap, inline scripts, and inline styles.
#   config.content_security_policy_nonce_generator = ->(request) { request.session.id.to_s }
#   config.content_security_policy_nonce_directives = %w(script-src style-src)
#
#   # Report violations without enforcing the policy.
#   # config.content_security_policy_report_only = true
# end


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/INITIALIZERS/FILTER_PARAMETER_LOGGING.RB CODE IS BELOW
# Be sure to restart your server when you modify this file.

# Configure parameters to be partially matched (e.g. passw matches password) and filtered from the log file.
# Use this to limit dissemination of sensitive information.
# See the ActiveSupport::ParameterFilter documentation for supported notations and behaviors.
Rails.application.config.filter_parameters += [
  :passw, :secret, :token, :_key, :crypt, :salt, :certificate, :otp, :ssn
]


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/INITIALIZERS/INFLECTIONS.RB CODE IS BELOW
# Be sure to restart your server when you modify this file.

# Add new inflection rules using the following format. Inflections
# are locale specific, and you may define rules for as many different
# locales as you wish. All of these examples are active by default:
# ActiveSupport::Inflector.inflections(:en) do |inflect|
#   inflect.plural /^(ox)$/i, "\\1en"
#   inflect.singular /^(ox)en/i, "\\1"
#   inflect.irregular "person", "people"
#   inflect.uncountable %w( fish sheep )
# end

# These inflection rules are supported but not enabled by default:
# ActiveSupport::Inflector.inflections(:en) do |inflect|
#   inflect.acronym "RESTful"
# end


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/INITIALIZERS/PERMISSIONS_POLICY.RB CODE IS BELOW
# Be sure to restart your server when you modify this file.

# Define an application-wide HTTP permissions policy. For further
# information see: https://developers.google.com/web/updates/2018/06/feature-policy

# Rails.application.config.permissions_policy do |policy|
#   policy.camera      :none
#   policy.gyroscope   :none
#   policy.microphone  :none
#   policy.usb         :none
#   policy.fullscreen  :self
#   policy.payment     :self, "https://secure.example.com"
# end


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/INITIALIZERS/RAILS_LIVE_RELOAD.RB CODE IS BELOW
# frozen_string_literal: true

RailsLiveReload.configure do |config|
  # config.url = "/rails/live/reload"

  # Default watched folders & files
  # config.watch %r{app/views/.+\.(erb|haml|slim)$}
  # config.watch %r{(app|vendor)/(assets|javascript)/\w+/(.+\.(css|js|html|png|jpg|ts|jsx)).*}, reload: :always

  # More examples:
  # config.watch %r{app/helpers/.+\.rb}, reload: :always
  # config.watch %r{config/locales/.+\.yml}, reload: :always

  # config.enabled = Rails.env.development?
end if defined?(RailsLiveReload)


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/LOCALES/EN.YML CODE IS BELOW
# Files in the config/locales directory are used for internationalization and
# are automatically loaded by Rails. If you want to use locales other than
# English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t "hello"
#
# In views, this is aliased to just `t`:
#
#     <%= t("hello") %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# To learn more about the API, please read the Rails Internationalization guide
# at https://guides.rubyonrails.org/i18n.html.
#
# Be aware that YAML interprets the following case-insensitive strings as
# booleans: `true`, `false`, `on`, `off`, `yes`, `no`. Therefore, these strings
# must be quoted to be interpreted as strings. For example:
#
#     en:
#       "yes": yup
#       enabled: "ON"

en:
  hello: "Hello world"


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/PUMA.RB CODE IS BELOW
# This configuration file will be evaluated by Puma. The top-level methods that
# are invoked here are part of Puma's configuration DSL. For more information
# about methods provided by the DSL, see https://puma.io/puma/Puma/DSL.html.

# Puma can serve each request in a thread from an internal thread pool.
# The `threads` method setting takes two numbers: a minimum and maximum.
# Any libraries that use thread pools should be configured to match
# the maximum value specified for Puma. Default is set to 5 threads for minimum
# and maximum; this matches the default thread size of Active Record.
max_threads_count = ENV.fetch("RAILS_MAX_THREADS") { 5 }
min_threads_count = ENV.fetch("RAILS_MIN_THREADS") { max_threads_count }
threads min_threads_count, max_threads_count

# Specifies that the worker count should equal the number of processors in production.
if ENV["RAILS_ENV"] == "production"
  require "concurrent-ruby"
  worker_count = Integer(ENV.fetch("WEB_CONCURRENCY") { Concurrent.physical_processor_count })
  workers worker_count if worker_count > 1
end

# Specifies the `worker_timeout` threshold that Puma will use to wait before
# terminating a worker in development environments.
worker_timeout 3600 if ENV.fetch("RAILS_ENV", "development") == "development"

# Specifies the `port` that Puma will listen on to receive requests; default is 3000.
port ENV.fetch("PORT") { 3000 }

# Specifies the `environment` that Puma will run in.
environment ENV.fetch("RAILS_ENV") { "development" }

# Specifies the `pidfile` that Puma will use.
pidfile ENV.fetch("PIDFILE") { "tmp/pids/server.pid" }

# Allow puma to be restarted by `bin/rails restart` command.
plugin :tmp_restart


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/ROUTES.RB CODE IS BELOW
Rails.application.routes.draw do
  get 'incoming_emails/show'
  root 'home#index'
  get 'signup', to: 'users#new'
  post 'users', to: 'users#create'
  get 'login', to: 'sessions#new'
  post 'login', to: 'sessions#create'
  delete 'logout', to: 'sessions#destroy'
  resources :incoming_emails, only: [:show]
  get 'inbox', to: 'inbox#index'
  get 'inbox/:id', to: 'inbox#show', as: 'email'
  mount ActionMailbox::Engine => "/rails/action_mailbox"
end

/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/STORAGE.YML CODE IS BELOW
test:
  service: Disk
  root: <%= Rails.root.join("tmp/storage") %>

local:
  service: Disk
  root: <%= Rails.root.join("storage") %>

# Use bin/rails credentials:edit to set the AWS secrets (as aws:access_key_id|secret_access_key)
# amazon:
#   service: S3
#   access_key_id: <%= Rails.application.credentials.dig(:aws, :access_key_id) %>
#   secret_access_key: <%= Rails.application.credentials.dig(:aws, :secret_access_key) %>
#   region: us-east-1
#   bucket: your_own_bucket-<%= Rails.env %>

# Remember not to checkin your GCS keyfile to a repository
# google:
#   service: GCS
#   project: your_project
#   credentials: <%= Rails.root.join("path/to/gcs.keyfile") %>
#   bucket: your_own_bucket-<%= Rails.env %>

# Use bin/rails credentials:edit to set the Azure Storage secret (as azure_storage:storage_access_key)
# microsoft:
#   service: AzureStorage
#   storage_account_name: your_account_name
#   storage_access_key: <%= Rails.application.credentials.dig(:azure_storage, :storage_access_key) %>
#   container: your_container_name-<%= Rails.env %>

# mirror:
#   service: Mirror
#   primary: local
#   mirrors: [ amazon, google, microsoft ]


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG/TAILWIND.CONFIG.JS CODE IS BELOW
const defaultTheme = require("tailwindcss/defaultTheme");

module.exports = {
  content: [
    "./public/*.html",
    "./app/helpers/**/*.rb",
    "./app/javascript/**/*.js",
    "./app/views/**/*.{erb,haml,html,slim}",
  ],
  theme: {
    extend: {
      colors: {
        blue: {
          500: "#2189fd",
          400: "#4c9ffd",
          300: "#76b5fd",
          200: "#a1cbfd",
          100: "#cce1fd",
        },
        darkBlue: {
          500: "#190933",
          400: "#311650",
          300: "#49336c",
          200: "#614189",
          100: "#7a5ea6",
        },
        cream: {
          500: "#ebe9c4",
          400: "#f1eecf",
          300: "#f6f2db",
          200: "#faf7e6",
          100: "#fdfbed",
        },
        green: {
          500: "#39c54f",
          400: "#60d26b",
          300: "#87df87",
          200: "#aeeaa3",
          100: "#d5f5bf",
        },
        red: {
          500: "#f65524",
          400: "#f87549",
          300: "#fa9570",
          200: "#fcb696",
          100: "#fed7bd",
        },
        white: {
          500: "#f7f6e7",
          400: "#f8f7ec",
          300: "#f9f8f0",
          200: "#faf9f4",
          100: "#fbfaf8",
        },
      },
      fontFamily: {
        "header-font": ["Newsreader", "serif"],
        "body-font": ["Montserrat", "sans-serif"],
      },
    },
  },
  plugins: [
    require("@tailwindcss/forms"),
    require("@tailwindcss/typography"),
    require("@tailwindcss/container-queries"),
  ],
};


/USERS/TRISTAN/CODE/BAZAP_NEWS/CONFIG.RU CODE IS BELOW
# This file is used by Rack-based servers to start the application.

require_relative "config/environment"

run Rails.application
Rails.application.load_server


/USERS/TRISTAN/CODE/BAZAP_NEWS/DB/SCHEMA.RB CODE IS BELOW
# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# This file is the source Rails uses to define your schema when running `bin/rails
# db:schema:load`. When creating a new database, `bin/rails db:schema:load` tends to
# be faster and is potentially less error prone than running all of your
# migrations from scratch. Old migrations may fail to apply correctly if those
# migrations use external dependencies or application code.
#
# It's strongly recommended that you check this file into your version control system.

ActiveRecord::Schema[7.1].define(version: 2024_07_12_033245) do
  # These are extensions that must be enabled in order to support this database
  enable_extension "plpgsql"

  create_table "action_mailbox_inbound_emails", force: :cascade do |t|
    t.integer "status", default: 0, null: false
    t.string "message_id", null: false
    t.string "message_checksum", null: false
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["message_id", "message_checksum"], name: "index_action_mailbox_inbound_emails_uniqueness", unique: true
  end

  create_table "active_storage_attachments", force: :cascade do |t|
    t.string "name", null: false
    t.string "record_type", null: false
    t.bigint "record_id", null: false
    t.bigint "blob_id", null: false
    t.datetime "created_at", null: false
    t.index ["blob_id"], name: "index_active_storage_attachments_on_blob_id"
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
  end

  create_table "active_storage_blobs", force: :cascade do |t|
    t.string "key", null: false
    t.string "filename", null: false
    t.string "content_type"
    t.text "metadata"
    t.string "service_name", null: false
    t.bigint "byte_size", null: false
    t.string "checksum"
    t.datetime "created_at", null: false
    t.index ["key"], name: "index_active_storage_blobs_on_key", unique: true
  end

  create_table "active_storage_variant_records", force: :cascade do |t|
    t.bigint "blob_id", null: false
    t.string "variation_digest", null: false
    t.index ["blob_id", "variation_digest"], name: "index_active_storage_variant_records_uniqueness", unique: true
  end

  create_table "emails", force: :cascade do |t|
    t.string "subject"
    t.string "sender"
    t.text "body"
    t.bigint "user_id", null: false
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.boolean "read", default: false
    t.index ["user_id"], name: "index_emails_on_user_id"
  end

  create_table "incoming_emails", force: :cascade do |t|
    t.bigint "user_id", null: false
    t.string "subject"
    t.text "body"
    t.string "sender"
    t.datetime "received_at"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.boolean "read"
    t.index ["user_id"], name: "index_incoming_emails_on_user_id"
  end

  create_table "users", force: :cascade do |t|
    t.string "username"
    t.string "password_digest"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
  end

  add_foreign_key "active_storage_attachments", "active_storage_blobs", column: "blob_id"
  add_foreign_key "active_storage_variant_records", "active_storage_blobs", column: "blob_id"
  add_foreign_key "emails", "users"
  add_foreign_key "incoming_emails", "users"
end


/USERS/TRISTAN/CODE/BAZAP_NEWS/DB/SEEDS.RB CODE IS BELOW
# This file should ensure the existence of records required to run the application in every environment (production,
# development, test). The code here should be idempotent so that it can be executed at any point in every environment.
# The data can then be loaded with the bin/rails db:seed command (or created alongside the database with db:setup).
#
# Example:
#
#   ["Action", "Comedy", "Drama", "Horror"].each do |genre_name|
#     MovieGenre.find_or_create_by!(name: genre_name)
#   end


/USERS/TRISTAN/CODE/BAZAP_NEWS/EXPORTCODEBASE.JS CODE IS BELOW
const fs = require("fs");
const path = require("path");
const readline = require("readline");

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

async function promptUser(question) {
  return new Promise((resolve) => {
    rl.question(question, (answer) => {
      resolve(answer);
    });
  });
}

async function selectFiles(currentDir, excludePatterns) {
  const selectedFiles = [];

  const files = await fs.promises.readdir(currentDir);
  for (const file of files) {
    const filePath = path.join(currentDir, file);
    const stats = await fs.promises.stat(filePath);

    if (stats.isDirectory()) {
      if (!excludePatterns.includes(file)) {
        const includeFolder = await promptUser(
          `Include folder '${file}'? (y/n) `
        );
        if (includeFolder.toLowerCase() === "y") {
          const subFiles = await selectFiles(filePath, excludePatterns);
          selectedFiles.push(...subFiles);
        }
      }
    } else {
      const includeFile = await promptUser(`Include file '${file}'? (y/n) `);
      if (includeFile.toLowerCase() === "y") {
        selectedFiles.push(filePath);
      }
    }
  }

  return selectedFiles;
}

async function mergeFiles(selectedFiles, outputFilePath) {
  let mergedContent = "";

  for (const filePath of selectedFiles) {
    const fileContent = await fs.promises.readFile(filePath, "utf-8");
    const sectionHeader = `\n${filePath.toUpperCase()} CODE IS BELOW\n`;
    mergedContent += sectionHeader + fileContent + "\n";
  }

  await fs.promises.writeFile(outputFilePath, mergedContent);
}

async function createOutputDirectory(outputDirPath) {
  try {
    await fs.promises.access(outputDirPath);
  } catch (error) {
    await fs.promises.mkdir(outputDirPath);
  }
}

function getTimestampedFileName() {
  const timestamp = new Date().toISOString().replace(/:/g, "-");
  return `merged-repo-${timestamp}.txt`;
}

async function main() {
  const currentDir = process.cwd();

  console.log("Select files and folders to include in the merge:");
  const excludePatterns = ["node_modules"]; // Add more patterns if needed
  const selectedFiles = await selectFiles(currentDir, excludePatterns);

  const outputDirName = "llm_text_transcripts";
  const outputDirPath = path.join(currentDir, outputDirName);
  await createOutputDirectory(outputDirPath);

  const outputFileName = getTimestampedFileName();
  const outputFilePath = path.join(outputDirPath, outputFileName);
  await mergeFiles(selectedFiles, outputFilePath);

  console.log(`Merged repository saved to: ${outputFilePath}`);
  rl.close();
}

main().catch(console.error);


/USERS/TRISTAN/CODE/BAZAP_NEWS/LIB/ASSETS/.KEEP CODE IS BELOW


/USERS/TRISTAN/CODE/BAZAP_NEWS/LIB/TASKS/.KEEP CODE IS BELOW

